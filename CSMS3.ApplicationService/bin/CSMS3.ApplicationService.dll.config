<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework" />    
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching" />

  </configSections>

  <!-- BEGIN: Entity Framework-->
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="Server=.;Initial Catalog=CSMS3;Integrated Security=True;packet size=4096" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <!-- END: Entity Framework-->  
  

  <!--<connectionStrings>
    <add name="CSMS3" providerName="System.Data.SqlClient" connectionString="Server=.\sqlexpress;Database=CSMS3;user id=sa;password=p@ssw0rd;persist security info=false;packet size=4096"/>
  </connectionStrings>-->

  <!--BEGIN: Unity-->
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">    
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <container>
      <extension type="Interception" />

      <!--Cache Provider-->
      <!--<register type="CSMS3.Infrastructure.Caching.ICacheProvider, CSMS3.Infrastructure" mapTo="CSMS3.Infrastructure.Caching.EntLibCacheProvider, CSMS3.Infrastructure.Caching" />-->

      <!--Entity Framework-->
      <register type="CSMS3.Domain.Repository.IRepositoryContext, CSMS3.Domain"
                    mapTo="CSMS3.Domain.Repository.EntityFramework.EntityFrameworkRepositoryContext, CSMS3.Domain.Repository">
        <lifetime type="CSMS3.Infrastructure.UnityExtensions.UnityOperationContextLifetimeManager, CSMS3.Infrastructure" />
      </register>
      <register type="CSMS3.Domain.Repository.IYongHuXXRepository, CSMS3.Domain"
                mapTo="CSMS3.Domain.Repository.EntityFramework.YongHuXXRepository, CSMS3.Domain.Repository" />

      <!--Domain Service-->
      <register type="CSMS3.Domain.Service.IDomainService, CSMS3.Domain" mapTo="CSMS3.Domain.Service.DomainService, CSMS3.Domain" />

      <!--Application Service Implementations-->
      <register type="CSMS3.ApplicationContract.IService1, CSMS3.ApplicationContract" mapTo="CSMS3.Application.Implementation.Service1Impl, CSMS3.Application">
        <interceptor type="InterfaceInterceptor" />
        <!--<interceptionBehavior type="CSMS3.Infrastructure.InterceptionBehaviors.CachingBehavior, CSMS3.Infrastructure" />-->
        <interceptionBehavior type="CSMS3.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, CSMS3.Infrastructure" />      
      </register>
    
      <!--Event Bus-->
      <register type="CSMS3.Event.Bus.IEventBus, CSMS3.Event" mapTo="CSMS3.Event.Bus.EventBus, CSMS3.Event">
        <lifetime type="CSMS3.Infrastructure.UnityExtensions.UnityOperationContextLifetimeManager, CSMS3.Infrastructure" />
      </register>  
  
    </container>
  </unity>
  <!--END: Unity-->


  <!--BEGIN: Caching-->
  <cachingConfiguration defaultCacheManager="CSMS3CacheManager">
    <cacheManagers>
      <add name="CSMS3CacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching" expirationPollFrequencyInSeconds="600" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
    </cacheManagers>
    <backingStores>
      <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching" name="NullBackingStore" />
    </backingStores>
  </cachingConfiguration>
  <!--END: Caching-->  
  
  
  
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
  </system.web>
  
  <system.serviceModel>
    <extensions>
      <behaviorExtensions>
        <!--
        用户可以使用行为扩展来创建用户定义的行为元素。这些元素可与标准的 Windows Communication Foundation (WCF) 行为元素一起使用。
        behaviorExtensions 节定义了元素，使其可用于配置中
        -->
        <add name="unity" type="CSMS3.Infrastructure.UnityExtensions.UnityBehaviorExtensionElement, CSMS3.Infrastructure" />
      </behaviorExtensions>
    </extensions>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
          <!-- 自定义扩展配置-->         
          <unity operationContextEnabled="true" instanceContextEnabled="true" contextChannelEnabled="true" serviceHostBaseEnabled="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>    
    
    
    
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        若要在调试过程中浏览 Web 应用程序根目录，请将下面的值设置为 True。
        在部署之前将该值设置为 False 可避免泄露 Web 应用程序文件夹信息。
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>
